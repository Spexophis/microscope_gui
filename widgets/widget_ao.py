from PyQt5 import QtWidgets, QtCore
from utilities import customized_widgets as cw


class AOWidget(QtWidgets.QWidget):
    Signal_shwfs_initiate = QtCore.pyqtSignal()
    Signal_shwfs_computewf = QtCore.pyqtSignal()
    Signal_shwfs_correctwf = QtCore.pyqtSignal()
    Signal_shwfs_savewf = QtCore.pyqtSignal()
    Signal_wfs_start = QtCore.pyqtSignal()
    Signal_wfs_stop = QtCore.pyqtSignal()
    Signal_shwfs_run = QtCore.pyqtSignal()
    Signal_push_actuator = QtCore.pyqtSignal()
    Signal_influence_function = QtCore.pyqtSignal()
    Signal_set_zernike = QtCore.pyqtSignal()
    Signal_set_dm = QtCore.pyqtSignal()
    Signal_update_cmd = QtCore.pyqtSignal()
    Signal_load_dm = QtCore.pyqtSignal(str)
    Signal_save_dm = QtCore.pyqtSignal()
    Signal_sensorlessAO_run = QtCore.pyqtSignal()
    Signal_sensorlessAO_save = QtCore.pyqtSignal()


    def __init__(self, parent=None):
        super().__init__(parent)

        layout = QtWidgets.QVBoxLayout(self)
        Group_exposuretime = cw.group_widget('SH Camera')
        Group_parameters = cw.group_widget('Parameters')
        Group_commands = cw.group_widget('Wavefront Sensor')
        Group_deformablemirror = cw.group_widget('Deformable Mirror')
        Group_dwfs = cw.group_widget('Wavefront Sensing AO')
        Group_sensorlessao = cw.group_widget('Sensorless Ao')
        Group_File = cw.group_widget('File')
        layout.addStretch()
        layout.addWidget(Group_exposuretime)
        layout.addWidget(Group_parameters)
        layout.addWidget(Group_commands)
        layout.addWidget(Group_deformablemirror)
        layout.addWidget(Group_dwfs)
        layout.addWidget(Group_sensorlessao)
        layout.addWidget(Group_File)
        layout.addStretch()
        self.setLayout(layout)

        Layout_exposuretime = QtWidgets.QGridLayout()
        self.Label_exposuretime = cw.label_widget(str('Exposure time'))
        self.QDoubleSpinBox_exposuretime = cw.doublespinbox_widget(0, 10, 0.005, 3, 0.05)
        # self.Label_shimgmax = cw.label_widget(str('SHImage MAX'))
        # self.lcdNumber_shimgmax = cw.lcdnumber_widget()
        # self.Label_shimgmin = cw.label_widget(str('SHImage MIN'))
        # self.lcdNumber_shimgmin = cw.lcdnumber_widget()
        self.Label_wfmax = cw.label_widget(str('Wavefront MAX'))
        self.lcdNumber_wfmax = cw.lcdnumber_widget()
        self.Label_wfmin = cw.label_widget(str('Wavefront MIN'))
        self.lcdNumber_wfmin = cw.lcdnumber_widget()
        self.Label_wfrms = cw.label_widget(str('Wavefront RMS'))
        self.lcdNumber_wfrms = cw.lcdnumber_widget()
        Layout_exposuretime.addWidget(self.Label_exposuretime, 0, 0, 1, 1)
        Layout_exposuretime.addWidget(self.QDoubleSpinBox_exposuretime, 0, 1, 1, 1)
        Layout_exposuretime.addWidget(self.Label_wfmin, 1, 0, 1, 1)
        Layout_exposuretime.addWidget(self.lcdNumber_wfmin, 2, 0, 1, 1)
        Layout_exposuretime.addWidget(self.Label_wfmax, 1, 1, 1, 1)
        Layout_exposuretime.addWidget(self.lcdNumber_wfmax, 2, 1, 1, 1)
        Layout_exposuretime.addWidget(self.Label_wfrms, 1, 2, 1, 1)
        Layout_exposuretime.addWidget(self.lcdNumber_wfrms, 2, 2, 1, 1)
        Group_exposuretime.setLayout(Layout_exposuretime)

        Layout_parameters = QtWidgets.QGridLayout()
        self.Label_base = cw.label_widget(str('Base'))
        self.Label_base_xcenter = cw.label_widget(str('X_center'))
        self.QSpinBox_base_xcenter = cw.spinbox_widget(0, 2048, 1, 1024)
        self.Label_base_ycenter = cw.label_widget(str('Y_center'))
        self.QSpinBox_base_ycenter = cw.spinbox_widget(0, 2048, 1, 1024)
        self.Label_offset = cw.label_widget(str('Offset'))
        self.Label_offset_xcenter = cw.label_widget(str('X_center'))
        self.QSpinBox_offset_xcenter = cw.spinbox_widget(0, 2048, 1, 1024)
        self.Label_offset_ycenter = cw.label_widget(str('Y_center'))
        self.QSpinBox_offset_ycenter = cw.spinbox_widget(0, 2048, 1, 1024)
        self.Label_n_lenslets_x = cw.label_widget(str('Lenslet X'))
        self.QSpinBox_n_lenslets_x = cw.spinbox_widget(0, 64, 1, 14)
        self.Label_n_lenslets_y = cw.label_widget(str('Lenslet Y'))
        self.QSpinBox_n_lenslets_y = cw.spinbox_widget(0, 64, 1, 14)
        self.Label_spacing = cw.label_widget(str('Spacing'))
        self.QSpinBox_spacing = cw.spinbox_widget(0, 64, 1, 26)
        self.Label_radius = cw.label_widget(str('Radius'))
        self.QSpinBox_radius = cw.spinbox_widget(0, 64, 1, 12)
        Layout_parameters.addWidget(self.Label_base, 0, 0, 1, 1)
        Layout_parameters.addWidget(self.Label_base_xcenter, 1, 0, 1, 1)
        Layout_parameters.addWidget(self.QSpinBox_base_xcenter, 1, 1, 1, 1)
        Layout_parameters.addWidget(self.Label_base_ycenter, 2, 0, 1, 1)
        Layout_parameters.addWidget(self.QSpinBox_base_ycenter, 2, 1, 1, 1)
        Layout_parameters.addWidget(self.Label_offset, 0, 2, 1, 1)
        Layout_parameters.addWidget(self.Label_offset_xcenter, 1, 2, 1, 1)
        Layout_parameters.addWidget(self.QSpinBox_offset_xcenter, 1, 3, 1, 1)
        Layout_parameters.addWidget(self.Label_offset_ycenter, 2, 2, 1, 1)
        Layout_parameters.addWidget(self.QSpinBox_offset_ycenter, 2, 3, 1, 1)
        Layout_parameters.addWidget(self.Label_n_lenslets_x, 4, 0, 1, 1)
        Layout_parameters.addWidget(self.QSpinBox_n_lenslets_x, 5, 0, 1, 1)
        Layout_parameters.addWidget(self.Label_n_lenslets_y, 4, 1, 1, 1)
        Layout_parameters.addWidget(self.QSpinBox_n_lenslets_y, 5, 1, 1, 1)
        Layout_parameters.addWidget(self.Label_spacing, 4, 2, 1, 1)
        Layout_parameters.addWidget(self.QSpinBox_spacing, 5, 2, 1, 1)
        Layout_parameters.addWidget(self.Label_radius, 4, 3, 1, 1)
        Layout_parameters.addWidget(self.QSpinBox_radius, 5, 3, 1, 1)
        Group_parameters.setLayout(Layout_parameters)

        Layout_shwfs = QtWidgets.QGridLayout()
        self.button_shwfs_initiate = cw.pushbutton_widget('Initiate WFS')
        self.button_wfsstart = cw.pushbutton_widget('SHStart')
        self.button_wfsstop = cw.pushbutton_widget('SHStop')
        self.button_run_wfr = cw.pushbutton_widget('RunWFR')
        self.button_shwfs_computewf = cw.pushbutton_widget('ComputeWF')
        self.button_shwfs_savewf = cw.pushbutton_widget('SaveWF')
        self.radioButton_exclude_zm = cw.radiobutton_widget("Exclude", f"rgb(220, 20, 60)")
        Layout_shwfs.addWidget(self.button_shwfs_initiate, 0, 0, 1, 1)
        Layout_shwfs.addWidget(self.button_wfsstart, 0, 1, 1, 1)
        Layout_shwfs.addWidget(self.button_wfsstop, 0, 2, 1, 1)
        Layout_shwfs.addWidget(self.button_run_wfr, 0, 3, 1, 1)
        Layout_shwfs.addWidget(self.radioButton_exclude_zm, 2, 0, 1, 1)
        Layout_shwfs.addWidget(self.button_shwfs_computewf, 2, 1, 1, 1)
        Layout_shwfs.addWidget(self.button_shwfs_savewf, 2, 3, 1, 1)
        Group_commands.setLayout(Layout_shwfs)

        Layout_deformablemirror = QtWidgets.QGridLayout()
        self.Label_actuator = cw.label_widget(str('Actuator'))
        self.QSpinBox_actuator = cw.spinbox_widget(0, 96, 1, 0)
        self.Label_actuator_push = cw.label_widget(str('Push'))
        self.QDoubleSpinBox_actuator_push = cw.doublespinbox_widget(-1, 1, 0.005, 3, 0)
        self.button_push_actuator = cw.pushbutton_widget('Push')
        self.Label_zernike_mode = cw.label_widget(str('Zernike Mode'))
        self.QSpinBox_zernike_mode = cw.spinbox_widget(0, 100, 1, 0)
        self.Label_zernike_mode_amp = cw.label_widget(str('Amplitude'))
        self.QDoubleSpinBox_zernike_mode_amp = cw.doublespinbox_widget(-20, 20, 0.01, 2, 0)
        self.button_set_zernike_mode = cw.pushbutton_widget('Set Zernike')
        self.button_influence_fuction_laser = cw.pushbutton_widget('InfluFunc')
        self.QComboBox_cmd = cw.combobox_widget(list_items=['0', '1'])
        self.QComboBox_cmd.setCurrentIndex(1)
        self.button_setDM = cw.pushbutton_widget('Set DM')
        self.button_loadDM = cw.pushbutton_widget('Load DM')
        self.button_update_cmd = cw.pushbutton_widget('Add DM')
        self.button_save_dm = cw.pushbutton_widget('Save DM')
        Layout_deformablemirror.addWidget(self.Label_actuator, 0, 0, 1, 1)
        Layout_deformablemirror.addWidget(self.QSpinBox_actuator, 0, 1, 1, 1)
        Layout_deformablemirror.addWidget(self.Label_actuator_push, 1, 0, 1, 1)
        Layout_deformablemirror.addWidget(self.QDoubleSpinBox_actuator_push, 1, 1, 1, 1)
        Layout_deformablemirror.addWidget(self.button_push_actuator, 2, 0, 1, 2)
        Layout_deformablemirror.addWidget(self.Label_zernike_mode, 0, 2, 1, 1)
        Layout_deformablemirror.addWidget(self.QSpinBox_zernike_mode, 0, 3, 1, 1)
        Layout_deformablemirror.addWidget(self.Label_zernike_mode_amp, 1, 2, 1, 1)
        Layout_deformablemirror.addWidget(self.QDoubleSpinBox_zernike_mode_amp, 1, 3, 1, 1)
        Layout_deformablemirror.addWidget(self.button_set_zernike_mode, 2, 2, 1, 2)
        Layout_deformablemirror.addWidget(self.button_influence_fuction_laser, 2, 1, 1, 2)
        Layout_deformablemirror.addWidget(self.QComboBox_cmd, 3, 0, 1, 1)
        Layout_deformablemirror.addWidget(self.button_setDM, 3, 1, 1, 1)
        Layout_deformablemirror.addWidget(self.button_loadDM, 2, 3, 1, 1)
        Layout_deformablemirror.addWidget(self.button_update_cmd, 3, 2, 1, 1)
        Layout_deformablemirror.addWidget(self.button_save_dm, 3, 3, 1, 1)
        Group_deformablemirror.setLayout(Layout_deformablemirror)

        Layout_dwfs = QtWidgets.QGridLayout()
        self.button_dwfs_correction = cw.pushbutton_widget('WF Correction')
        Layout_dwfs.addWidget(self.button_dwfs_correction, 0, 0, 1, 1)
        Group_dwfs.setLayout(Layout_dwfs)

        Layout_sensorless = QtWidgets.QGridLayout()
        self.Label_zernike_modes = cw.label_widget(str('Zernike Modes'))
        self.Label_zernike_mode_start = cw.label_widget(str('From'))
        self.QSpinBox_zernike_mode_start = cw.spinbox_widget(1, 64, 1, 1)
        self.Label_zernike_mode_stop = cw.label_widget(str('To'))
        self.QSpinBox_zernike_mode_stop = cw.spinbox_widget(1, 64, 1, 32)
        self.Label_zernike_modes_amps = cw.label_widget(str('Amplitudes'))
        self.Label_zernike_modes_amps_start = cw.label_widget(str('From'))
        self.QDoubleSpinBox_zernike_mode_amps_start = cw.doublespinbox_widget(-50, 0, 0.01, 2, -1.6)
        self.Label_zernike_modes_amps_stepnum = cw.label_widget(str('StepNum'))
        self.QSpinBox_zernike_mode_amps_stepnum = cw.spinbox_widget(0, 50, 2, 5)
        self.Label_zernike_modes_amps_step = cw.label_widget(str('StepSize'))
        self.QDoubleSpinBox_zernike_mode_amps_step = cw.doublespinbox_widget(0, 50, 0.01, 2, 1.6)
        self.Label_lpf = cw.label_widget(str('LPF'))
        self.QDoubleSpinBox_lpf = cw.doublespinbox_widget(0, 1, 0.05, 2, 0.08)
        self.Label_hpf = cw.label_widget(str('HPF'))
        self.QDoubleSpinBox_hpf = cw.doublespinbox_widget(0, 1, 0.05, 2, 0.64)
        self.Label_metric_function = cw.label_widget(str('Image Metric'))
        self.QComboBox_metric = cw.combobox_widget(list_items=['SNR(FFT)', 'Max(Intensity)', 'HighPass(FFT)'])
        self.button_sensorless_run = cw.pushbutton_widget('Run AO')
        self.button_sensorless_save = cw.pushbutton_widget('Save Results')
        Layout_sensorless.addWidget(self.Label_zernike_modes, 0, 0, 1, 2)
        Layout_sensorless.addWidget(self.Label_zernike_mode_start, 1, 0, 1, 1)
        Layout_sensorless.addWidget(self.QSpinBox_zernike_mode_start, 1, 1, 1, 1)
        Layout_sensorless.addWidget(self.Label_zernike_mode_stop, 2, 0, 1, 1)
        Layout_sensorless.addWidget(self.QSpinBox_zernike_mode_stop, 2, 1, 1, 1)
        Layout_sensorless.addWidget(self.Label_zernike_modes_amps, 0, 2, 1, 2)
        Layout_sensorless.addWidget(self.Label_zernike_modes_amps_start, 1, 2, 1, 1)
        Layout_sensorless.addWidget(self.QDoubleSpinBox_zernike_mode_amps_start, 1, 3, 1, 1)
        Layout_sensorless.addWidget(self.Label_zernike_modes_amps_stepnum, 2, 2, 1, 1)
        Layout_sensorless.addWidget(self.QSpinBox_zernike_mode_amps_stepnum, 2, 3, 1, 1)
        Layout_sensorless.addWidget(self.Label_zernike_modes_amps_step, 3, 2, 1, 1)
        Layout_sensorless.addWidget(self.QDoubleSpinBox_zernike_mode_amps_step, 3, 3, 1, 1)
        Layout_sensorless.addWidget(self.Label_lpf, 0, 4, 1, 1)
        Layout_sensorless.addWidget(self.QDoubleSpinBox_lpf, 1, 4, 1, 1)
        Layout_sensorless.addWidget(self.Label_hpf, 2, 4, 1, 1)
        Layout_sensorless.addWidget(self.QDoubleSpinBox_hpf, 3, 4, 1, 1)
        Layout_sensorless.addWidget(self.Label_metric_function, 0, 5, 1, 1)
        Layout_sensorless.addWidget(self.QComboBox_metric, 1, 5, 1, 1)
        Layout_sensorless.addWidget(self.button_sensorless_run, 2, 5, 1, 1)
        Layout_sensorless.addWidget(self.button_sensorless_save, 3, 5, 1, 1)
        Group_sensorlessao.setLayout(Layout_sensorless)

        Layout_File = QtWidgets.QGridLayout()
        self.QLabel_file_name = cw.label_widget(str('File name'))
        self.QLineEdit_filename = cw.lineedit_widget()
        Layout_File.addWidget(self.QLabel_file_name, 0, 0, 1, 1)
        Layout_File.addWidget(self.QLineEdit_filename, 0, 1, 1, 5)
        Group_File.setLayout(Layout_File)

        self.button_shwfs_initiate.clicked.connect(self.Signal_shwfs_initiate.emit)
        self.button_wfsstart.clicked.connect(self.Signal_wfs_start.emit)
        self.button_wfsstop.clicked.connect(self.Signal_wfs_stop.emit)
        self.button_run_wfr.clicked.connect(self.Signal_shwfs_run.emit)
        self.button_shwfs_computewf.clicked.connect(self.Signal_shwfs_computewf.emit)
        self.button_shwfs_savewf.clicked.connect(self.Signal_shwfs_savewf.emit)
        self.button_push_actuator.clicked.connect(self.Signal_push_actuator.emit)
        self.button_influence_fuction_laser.clicked.connect(self.Signal_influence_function.emit)
        self.button_set_zernike_mode.clicked.connect(self.Signal_set_zernike.emit)
        self.button_setDM.clicked.connect(self.Signal_set_dm.emit)
        self.button_update_cmd.clicked.connect(self.Signal_update_cmd.emit)
        self.button_loadDM.clicked.connect(self.dialog)
        self.button_save_dm.clicked.connect(self.Signal_save_dm.emit)
        self.button_dwfs_correction.clicked.connect(self.Signal_shwfs_correctwf.emit)
        self.button_sensorless_run.clicked.connect(self.Signal_sensorlessAO_run.emit)
        self.button_sensorless_save.clicked.connect(self.Signal_sensorlessAO_save.emit)

        self.QSpinBox_base_xcenter.setValue(1011)
        self.QSpinBox_base_ycenter.setValue(1077)
        self.QSpinBox_offset_xcenter.setValue(1011)
        self.QSpinBox_offset_ycenter.setValue(1077)
        self.QSpinBox_n_lenslets_x.setValue(19)
        self.QSpinBox_n_lenslets_x.setValue(18)
        self.QSpinBox_spacing.setValue(60)
        self.QSpinBox_radius.setValue(32)

    def dialog(self):
        file, check = QtWidgets.QFileDialog.getOpenFileName(None, "QtWidgets.QFileDialog.getOpenFileName()", "",
                                                            "All Files (*);;Python Files (*.py);;Text Files (*.txt)")
        if check:
            print(file)
            self.Signal_load_dm.emit(file)


import sys

if __name__ == '__main__':
    app = QtWidgets.QApplication(sys.argv)
    window = AOWidget()
    window.show()
    sys.exit(app.exec_())
